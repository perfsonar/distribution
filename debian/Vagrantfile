# -*- mode: ruby -*-
# vi: set ft=ruby shiftwidth=4 :

# A sane locale
ENV["LC_ALL"] = "C"

## The following 2 variables would preferably be defined in your local ~/.vagrant.d/Vagrantfile
# Architectures for which we will build Debian packages
# If empty, all architectures supported by perfSONAR will be built
#ENV["PS_DEB_ARCHES"] = "amd64 armhf"
# Debian repository mirror to be used when fetching packages
# If not set, will default to the Vagrant Box image we use
#ENV["PS_DEB_MIRROR"] = "http://debian/debian"

# Testing hosts
# Official Debian boxes from https://app.vagrantup.com/debian/
# Official Ubuntu boxes from https://app.vagrantup.com/ubuntu/
testing_hosts=[
    {
        :hostname => "d9-install-ps",
        :ip => "10.0.0.100",
        :box => "debian/stretch64",
        :vbguest_auto_update => "true"
    },
    {
        :hostname => "d10-install-ps",
        :ip => "10.0.0.103",
        :box => "debian/buster64",
        :vbguest_auto_update => "true"
    },
    {
        :hostname => "u16-install-ps",
        :ip => "10.0.0.101",
        :box => "ubuntu/xenial64",
        # Under FreeBSD host, Host IO cache **need** to be enabled or box crashes after some time
        :customize => [
            {
                :cmd => "storagectl",
                :args => [
                    {
                        :option => "--name",
                        :value => "SCSI"
                    },
                    {
                        :option => "--hostiocache",
                        :value => "on"
                    }
                ]
            }
        ]
    },
    {
        :hostname => "u18-install-ps",
        :ip => "10.0.0.102",
        :box => "ubuntu/bionic64",
        # Under FreeBSD host, Host IO cache **need** to be enabled or box crashes after some time
        :customize => [
            {
                :cmd => "storagectl",
                :args => [
                    {
                        :option => "--name",
                        :value => "SCSI"
                    },
                    {
                        :option => "--hostiocache",
                        :value => "on"
                    }
                ]
            }
        ]
    }
]

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
# More info at https://docs.vagrantup.com.

Vagrant.configure("2") do |config|
    # Increase RAM for better performance
    config.vm.provider "virtualbox" do |vb|
        vb.memory = 2048
    end

    if Vagrant.has_plugin?("vagrant-vbguest")
        # Don't allow upgrades; the box has what it has.
        config.vbguest.auto_update = false
    end

    # Build a build machine as the default
    config.vm.define "d9-build-ps", primary: true, autostart: true do |build|
        # Set a meaningful hostname
        build.vm.hostname = "d9-build-ps"
        # We use Debian-contrib to have backports and the contrib repo enabled
        build.vm.box = "debian/contrib-stretch64"

        # Add a second disk to contain the pbuilder chroot
        # TODO: would even be better to put the disk image inside the VM directory, how?
        diskPath = `vboxmanage list systemproperties | awk '/^Default machine folder:/ { printf "%s",$4 }'`
        secondDisk = diskPath + "/vagrant-build-host-secondDisk.vdi"
        unless File.exist?(secondDisk)
            build.vm.provider "virtualbox" do |vb|
                vb.customize ['createhd', '--filename', secondDisk, '--size', 25 * 1024]
                vb.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', secondDisk]
            end
            build.vm.provision "shell", path: "vagrant-build-host-d9-secondDisk.sh"
        end

        # We should have the /distribution/ repo at the same level as all other pS repo
        # We share the toplevel directory of all repositories (i.e. 2 levels up)
        build.vm.synced_folder "../..", "/vagrant", type: "virtualbox"

        # Install all requirements and perform initial setup
        build.vm.provision "shell", path: "build-host-d9-setup.sh", env: {
            "REPO_PREFIX" => "/vagrant/distribution/debian",
            "ARCHES" => ENV["PS_DEB_ARCHES"],
            "MIRROR" => ENV["PS_DEB_MIRROR"]
        }
        # A second step is needed for the setup (to separate Vagrant specifics)
        build.vm.provision "shell", path: "vagrant-build-host-d9-user-setup.sh", privileged: false, run: "always", env: {
            "REPO_PREFIX" => "/vagrant/distribution/debian",
            "RESULT_DIR" => "/vagrant/result",
            "VAGRANT_USER_DOTFILES" => ENV["VAGRANT_USER_DOTFILES"],
            "VAGRANT_USER_DOTFILES_DEPLOY" => ENV["VAGRANT_USER_DOTFILES_DEPLOY"]
        }

        # Message the user
        build.vm.post_up_message = <<MSG
-------------------------------------------
perfSONAR Debian build machine is ready!
You can use it with the following commands:

vagrant ssh
./ps-cowbuilder-build -b 4.3.0 [PS_REPO]
-------------------------------------------

The resulting packages will be in a directory called result/
at the same level as this git repository.
MSG

    end

    # Testing VM to test package installation
    testing_hosts.each do |host|
        config.vm.define host[:hostname], autostart: false do |install_vm|
            install_vm.vm.box = host[:box]
            # Local customizations
            if host[:box_version]
                install_vm.vm.box_version = host[:box_version]
            end
            if Vagrant.has_plugin?("vagrant-vbguest") and host[:vbguest_auto_update]
                install_vm.vbguest.auto_update = host[:vbguest_auto_update]
            end
            if host[:customize]
                host[:customize].each do |custom|
                    custom_command = [custom[:cmd], :id]
                    custom[:args].each do |arg|
                        custom_command += [arg[:option], arg[:value]]
                    end
                    install_vm.vm.provider "virtualbox" do |vb|
                        vb.customize custom_command
                    end
                end
            end

            install_vm.vm.hostname = host[:hostname]
            install_vm.vm.network "private_network", ip: host[:ip]

            # We share the toplevel directory of all repositories
            install_vm.vm.synced_folder "../..", "/vagrant", type: "virtualbox"

            # install all requirements and perform initial setup
            install_vm.vm.provision "shell", path: "install-host-setup.sh", env: {
                "SHARED_REPO_PREFIX" => "/vagrant",
                "install_vm_hostname" => host[:hostname],
                "install_vm_ip" => host[:ip],
                "install_vm_box" => host[:box]
            }
     
        end
    end
end
