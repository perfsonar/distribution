#!/bin/sh -e

NAME=distpoint
WHEREAMI=$(dirname $0)


if [ "$(id -u)" -ne 0 ]
then
    echo "This program must be run as root." 1>&2
    exit 1
fi


section()
{
    echo
    echo
    echo ----- "$@" | tr a-z A-Z
    echo
}


section Prerequisites

dnf -y install \
    anacron \
    m4 \
    make \
    rsync



section User Account

ACCOUNT="${NAME}"

id "${ACCOUNT}" >/dev/null 2>&1 \
    || useradd -c "Distro Box" "${ACCOUNT}"

ACCOUNT_HOME=$(getent passwd "${ACCOUNT}" | cut -d : -f 6)

DISTROBOX="${ACCOUNT_HOME}/${NAME}" 
mkdir -p "${DISTROBOX}"
rsync --archive --delete "${WHEREAMI}/" "${DISTROBOX}"

VAR="${ACCOUNT_HOME}/var"
mkdir -p "${VAR}"

CURRENT="${VAR}/current"

# Install a sample if there's nothing in place already or what's there
# is the sample.
if [ -e "${CURRENT}/.sample" -o ! -e "${CURRENT}" ]
then
    rm -rf "${CURRENT}"
    cp -r "${DISTROBOX}/sample" "${CURRENT}"
    mkdir -p "${CURRENT}/.site-index"
    rsync --archive --delete "${DISTROBOX}/index/" "${CURRENT}/.site-index"
fi

chown -R "${ACCOUNT}.${ACCOUNT}" "${ACCOUNT_HOME}"
chmod 711 "${ACCOUNT_HOME}"



section fail2ban

dnf -y install firewalld fail2ban

cp "${WHEREAMI}/fail2ban/01-rsyncd.conf" /etc/fail2ban/jail.d
cp "${WHEREAMI}/fail2ban/rsyncd.conf" /etc/fail2ban/filter.d

systemctl enable fail2ban
systemctl reload-or-restart fail2ban


section Firewall

systemctl enable --now firewalld

firewall-cmd --permanent --zone=public --add-service=https
firewall-cmd --permanent --zone=public --add-service=ssh
firewall-cmd --permanent --zone=public --add-port=873/tcp
firewall-cmd --reload



section Apache

dnf -y install httpd

APACHE_CONF=/etc/httpd/conf.d

rm -f "${APACHE_CONF}/welcome.conf"
rm -f "${APACHE_CONF}/userdir.conf"

cat > "${APACHE_CONF}/000-perfsonar-distro-box.conf" <<EOF
DocumentRoot ${VAR}/current

<Directory ${VAR}/current>
  Options Indexes FollowSymlinks
  AllowOverride All
  Require all granted

  IndexOptions FancyIndexing HTMLTable SuppressIcon SuppressDescription VersionSort
  IndexIgnore .site-index

  HeaderName /.site-index/header.html
  ReadmeName /.site-index/footer.html

  # Enable SSI for .html files (or use .shtml files instead)
  AddOutputFilter INCLUDES .html

  # Parse files for SSI
  Options +Indexes +IncludesNOEXEC

  SetEnvIf Request_URI ^/(?:(.+)/)?\$ DIR=/\$1

</Directory>
EOF


# Apache needs its document root in the same security context as the
# default.
CONTEXT=$(ls -ld --context /var/www | awk '{ print $5 }')
chcon -R "${CONTEXT}" "${VAR}"

section Certbot

dnf -y install certbot python3-certbot-apache

FQDN=$(hostname)
echo Hostname is ${FQDN}

# Certbot will add its own.
rm -f /etc/httpd/conf.d/ssl.conf

# Setup requires HTTP temporarily

firewall-cmd --permanent --zone=public --add-service=http
firewall-cmd --reload

HTTP_CONF="${APACHE_CONF}/000-certbot-http.conf"
cat > "${HTTP_CONF}" <<EOF

<VirtualHost *:80>
    ServerName ${FQDN}
    DocumentRoot /var/www/html
    ServerAlias ${FQDN}
    ErrorLog /dev/null
</VirtualHost>
EOF

systemctl reload-or-restart httpd

# This won't register twice.
certbot \
    --agree-tos \
    --apache \
    --domains "${FQDN}" \
    --email 'perfsonar-developer@internet2.edu' \
    -n \


firewall-cmd --permanent --zone=public --remove-service=http
firewall-cmd --reload
rm -rf "${HTTP_CONF}"

# TODO: This is fragile, but Certbot doesn't have a way to customize
# it.
sed \
    -i \
    -e "s|DocumentRoot[[:space:]].*\$|DocumentRoot ${CURRENT}|g" \
    /etc/httpd/conf.d/000-certbot-http-le-ssl.conf

systemctl reload-or-restart httpd

CERTBOT_TAG=certbot

# Remove any previously-added entries
crontab -l 2>/dev/null \
    | sed -e "/^#BEGIN-${CERTBOT_TAG}\$/,/^#END-${CERTBOT_TAG}\$/d" \
    | crontab


crontab -l 2>/dev/null \
    | (cat \
	   && echo "#BEGIN-${CERTBOT_TAG}" \
	   && echo "0 1 * * * certbot renew --quiet --apache --renew-hook 'systemctl restart httpd'" \
	   && echo "#END-${CERTBOT_TAG}") \
    | crontab



section Rsync

dnf install -y rsync-daemon

# Start with an inert configuration
"${WHEREAMI}/rsync/update-rsync" "${VAR}"

setsebool -P rsync_export_all_ro 1

systemctl enable --now rsyncd



section Cron

sed \
    -e "s/__NAME__/${NAME}/g" \
    -e "s/__ACCOUNT__/${ACCOUNT}/g" \
    "${DISTROBOX}/etc/crontab"\
    | crontab -u "${ACCOUNT}" -
